package com.dwy.logistics.model.entities;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class OrdersExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table orders
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table orders
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table orders
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    public OrdersExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table orders
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table orders
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andOrderIDIsNull() {
            addCriterion("orderID is null");
            return (Criteria) this;
        }

        public Criteria andOrderIDIsNotNull() {
            addCriterion("orderID is not null");
            return (Criteria) this;
        }

        public Criteria andOrderIDEqualTo(Integer value) {
            addCriterion("orderID =", value, "orderID");
            return (Criteria) this;
        }

        public Criteria andOrderIDNotEqualTo(Integer value) {
            addCriterion("orderID <>", value, "orderID");
            return (Criteria) this;
        }

        public Criteria andOrderIDGreaterThan(Integer value) {
            addCriterion("orderID >", value, "orderID");
            return (Criteria) this;
        }

        public Criteria andOrderIDGreaterThanOrEqualTo(Integer value) {
            addCriterion("orderID >=", value, "orderID");
            return (Criteria) this;
        }

        public Criteria andOrderIDLessThan(Integer value) {
            addCriterion("orderID <", value, "orderID");
            return (Criteria) this;
        }

        public Criteria andOrderIDLessThanOrEqualTo(Integer value) {
            addCriterion("orderID <=", value, "orderID");
            return (Criteria) this;
        }

        public Criteria andOrderIDIn(List<Integer> values) {
            addCriterion("orderID in", values, "orderID");
            return (Criteria) this;
        }

        public Criteria andOrderIDNotIn(List<Integer> values) {
            addCriterion("orderID not in", values, "orderID");
            return (Criteria) this;
        }

        public Criteria andOrderIDBetween(Integer value1, Integer value2) {
            addCriterion("orderID between", value1, value2, "orderID");
            return (Criteria) this;
        }

        public Criteria andOrderIDNotBetween(Integer value1, Integer value2) {
            addCriterion("orderID not between", value1, value2, "orderID");
            return (Criteria) this;
        }

        public Criteria andStartPlaceIDIsNull() {
            addCriterion("startPlaceID is null");
            return (Criteria) this;
        }

        public Criteria andStartPlaceIDIsNotNull() {
            addCriterion("startPlaceID is not null");
            return (Criteria) this;
        }

        public Criteria andStartPlaceIDEqualTo(String value) {
            addCriterion("startPlaceID =", value, "startPlaceID");
            return (Criteria) this;
        }

        public Criteria andStartPlaceIDNotEqualTo(String value) {
            addCriterion("startPlaceID <>", value, "startPlaceID");
            return (Criteria) this;
        }

        public Criteria andStartPlaceIDGreaterThan(String value) {
            addCriterion("startPlaceID >", value, "startPlaceID");
            return (Criteria) this;
        }

        public Criteria andStartPlaceIDGreaterThanOrEqualTo(String value) {
            addCriterion("startPlaceID >=", value, "startPlaceID");
            return (Criteria) this;
        }

        public Criteria andStartPlaceIDLessThan(String value) {
            addCriterion("startPlaceID <", value, "startPlaceID");
            return (Criteria) this;
        }

        public Criteria andStartPlaceIDLessThanOrEqualTo(String value) {
            addCriterion("startPlaceID <=", value, "startPlaceID");
            return (Criteria) this;
        }

        public Criteria andStartPlaceIDLike(String value) {
            addCriterion("startPlaceID like", value, "startPlaceID");
            return (Criteria) this;
        }

        public Criteria andStartPlaceIDNotLike(String value) {
            addCriterion("startPlaceID not like", value, "startPlaceID");
            return (Criteria) this;
        }

        public Criteria andStartPlaceIDIn(List<String> values) {
            addCriterion("startPlaceID in", values, "startPlaceID");
            return (Criteria) this;
        }

        public Criteria andStartPlaceIDNotIn(List<String> values) {
            addCriterion("startPlaceID not in", values, "startPlaceID");
            return (Criteria) this;
        }

        public Criteria andStartPlaceIDBetween(String value1, String value2) {
            addCriterion("startPlaceID between", value1, value2, "startPlaceID");
            return (Criteria) this;
        }

        public Criteria andStartPlaceIDNotBetween(String value1, String value2) {
            addCriterion("startPlaceID not between", value1, value2, "startPlaceID");
            return (Criteria) this;
        }

        public Criteria andEndPlaceIDIsNull() {
            addCriterion("endPlaceID is null");
            return (Criteria) this;
        }

        public Criteria andEndPlaceIDIsNotNull() {
            addCriterion("endPlaceID is not null");
            return (Criteria) this;
        }

        public Criteria andEndPlaceIDEqualTo(String value) {
            addCriterion("endPlaceID =", value, "endPlaceID");
            return (Criteria) this;
        }

        public Criteria andEndPlaceIDNotEqualTo(String value) {
            addCriterion("endPlaceID <>", value, "endPlaceID");
            return (Criteria) this;
        }

        public Criteria andEndPlaceIDGreaterThan(String value) {
            addCriterion("endPlaceID >", value, "endPlaceID");
            return (Criteria) this;
        }

        public Criteria andEndPlaceIDGreaterThanOrEqualTo(String value) {
            addCriterion("endPlaceID >=", value, "endPlaceID");
            return (Criteria) this;
        }

        public Criteria andEndPlaceIDLessThan(String value) {
            addCriterion("endPlaceID <", value, "endPlaceID");
            return (Criteria) this;
        }

        public Criteria andEndPlaceIDLessThanOrEqualTo(String value) {
            addCriterion("endPlaceID <=", value, "endPlaceID");
            return (Criteria) this;
        }

        public Criteria andEndPlaceIDLike(String value) {
            addCriterion("endPlaceID like", value, "endPlaceID");
            return (Criteria) this;
        }

        public Criteria andEndPlaceIDNotLike(String value) {
            addCriterion("endPlaceID not like", value, "endPlaceID");
            return (Criteria) this;
        }

        public Criteria andEndPlaceIDIn(List<String> values) {
            addCriterion("endPlaceID in", values, "endPlaceID");
            return (Criteria) this;
        }

        public Criteria andEndPlaceIDNotIn(List<String> values) {
            addCriterion("endPlaceID not in", values, "endPlaceID");
            return (Criteria) this;
        }

        public Criteria andEndPlaceIDBetween(String value1, String value2) {
            addCriterion("endPlaceID between", value1, value2, "endPlaceID");
            return (Criteria) this;
        }

        public Criteria andEndPlaceIDNotBetween(String value1, String value2) {
            addCriterion("endPlaceID not between", value1, value2, "endPlaceID");
            return (Criteria) this;
        }

        public Criteria andGoodsIDIsNull() {
            addCriterion("goodsID is null");
            return (Criteria) this;
        }

        public Criteria andGoodsIDIsNotNull() {
            addCriterion("goodsID is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsIDEqualTo(Integer value) {
            addCriterion("goodsID =", value, "goodsID");
            return (Criteria) this;
        }

        public Criteria andGoodsIDNotEqualTo(Integer value) {
            addCriterion("goodsID <>", value, "goodsID");
            return (Criteria) this;
        }

        public Criteria andGoodsIDGreaterThan(Integer value) {
            addCriterion("goodsID >", value, "goodsID");
            return (Criteria) this;
        }

        public Criteria andGoodsIDGreaterThanOrEqualTo(Integer value) {
            addCriterion("goodsID >=", value, "goodsID");
            return (Criteria) this;
        }

        public Criteria andGoodsIDLessThan(Integer value) {
            addCriterion("goodsID <", value, "goodsID");
            return (Criteria) this;
        }

        public Criteria andGoodsIDLessThanOrEqualTo(Integer value) {
            addCriterion("goodsID <=", value, "goodsID");
            return (Criteria) this;
        }

        public Criteria andGoodsIDIn(List<Integer> values) {
            addCriterion("goodsID in", values, "goodsID");
            return (Criteria) this;
        }

        public Criteria andGoodsIDNotIn(List<Integer> values) {
            addCriterion("goodsID not in", values, "goodsID");
            return (Criteria) this;
        }

        public Criteria andGoodsIDBetween(Integer value1, Integer value2) {
            addCriterion("goodsID between", value1, value2, "goodsID");
            return (Criteria) this;
        }

        public Criteria andGoodsIDNotBetween(Integer value1, Integer value2) {
            addCriterion("goodsID not between", value1, value2, "goodsID");
            return (Criteria) this;
        }

        public Criteria andGoodsNumberIsNull() {
            addCriterion("goodsNumber is null");
            return (Criteria) this;
        }

        public Criteria andGoodsNumberIsNotNull() {
            addCriterion("goodsNumber is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsNumberEqualTo(Integer value) {
            addCriterion("goodsNumber =", value, "goodsNumber");
            return (Criteria) this;
        }

        public Criteria andGoodsNumberNotEqualTo(Integer value) {
            addCriterion("goodsNumber <>", value, "goodsNumber");
            return (Criteria) this;
        }

        public Criteria andGoodsNumberGreaterThan(Integer value) {
            addCriterion("goodsNumber >", value, "goodsNumber");
            return (Criteria) this;
        }

        public Criteria andGoodsNumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("goodsNumber >=", value, "goodsNumber");
            return (Criteria) this;
        }

        public Criteria andGoodsNumberLessThan(Integer value) {
            addCriterion("goodsNumber <", value, "goodsNumber");
            return (Criteria) this;
        }

        public Criteria andGoodsNumberLessThanOrEqualTo(Integer value) {
            addCriterion("goodsNumber <=", value, "goodsNumber");
            return (Criteria) this;
        }

        public Criteria andGoodsNumberIn(List<Integer> values) {
            addCriterion("goodsNumber in", values, "goodsNumber");
            return (Criteria) this;
        }

        public Criteria andGoodsNumberNotIn(List<Integer> values) {
            addCriterion("goodsNumber not in", values, "goodsNumber");
            return (Criteria) this;
        }

        public Criteria andGoodsNumberBetween(Integer value1, Integer value2) {
            addCriterion("goodsNumber between", value1, value2, "goodsNumber");
            return (Criteria) this;
        }

        public Criteria andGoodsNumberNotBetween(Integer value1, Integer value2) {
            addCriterion("goodsNumber not between", value1, value2, "goodsNumber");
            return (Criteria) this;
        }

        public Criteria andTimeIsNull() {
            addCriterion("time is null");
            return (Criteria) this;
        }

        public Criteria andTimeIsNotNull() {
            addCriterion("time is not null");
            return (Criteria) this;
        }

        public Criteria andTimeEqualTo(Date value) {
            addCriterionForJDBCDate("time =", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("time <>", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("time >", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("time >=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThan(Date value) {
            addCriterionForJDBCDate("time <", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("time <=", value, "time");
            return (Criteria) this;
        }

        public Criteria andTimeIn(List<Date> values) {
            addCriterionForJDBCDate("time in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("time not in", values, "time");
            return (Criteria) this;
        }

        public Criteria andTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("time between", value1, value2, "time");
            return (Criteria) this;
        }

        public Criteria andTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("time not between", value1, value2, "time");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table orders
     *
     * @mbg.generated do_not_delete_during_merge Fri Jan 08 16:16:33 CST 2021
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table orders
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}