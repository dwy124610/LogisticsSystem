package com.dwy.logistics.mapper;

import com.dwy.logistics.model.entities.Car;
import com.dwy.logistics.model.entities.CarExample;
import com.dwy.logistics.model.entities.CarKey;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface CarMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    @SelectProvider(type=CarSqlProvider.class, method="countByExample")
    long countByExample(CarExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    @DeleteProvider(type=CarSqlProvider.class, method="deleteByExample")
    int deleteByExample(CarExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    @Delete({
        "delete from car",
        "where carID = #{carID,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(CarKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    @Insert({
        "insert into car (carID, carType, ",
        "volume, minVolume, ",
        "maxVolume, height, ",
        "width)",
        "values (#{carID,jdbcType=INTEGER}, #{carType,jdbcType=VARCHAR}, ",
        "#{volume,jdbcType=DOUBLE}, #{minVolume,jdbcType=DOUBLE}, ",
        "#{maxVolume,jdbcType=DOUBLE}, #{height,jdbcType=DOUBLE}, ",
        "#{width,jdbcType=DOUBLE})"
    })
    int insert(Car record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    @InsertProvider(type=CarSqlProvider.class, method="insertSelective")
    int insertSelective(Car record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    @SelectProvider(type=CarSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="carID", property="carID", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="carType", property="carType", jdbcType=JdbcType.VARCHAR),
        @Result(column="volume", property="volume", jdbcType=JdbcType.DOUBLE),
        @Result(column="minVolume", property="minVolume", jdbcType=JdbcType.DOUBLE),
        @Result(column="maxVolume", property="maxVolume", jdbcType=JdbcType.DOUBLE),
        @Result(column="height", property="height", jdbcType=JdbcType.DOUBLE),
        @Result(column="width", property="width", jdbcType=JdbcType.DOUBLE)
    })
    List<Car> selectByExample(CarExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    @Select({
        "select",
        "carID, carType, volume, minVolume, maxVolume, height, width",
        "from car",
        "where carID = #{carID,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="carID", property="carID", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="carType", property="carType", jdbcType=JdbcType.VARCHAR),
        @Result(column="volume", property="volume", jdbcType=JdbcType.DOUBLE),
        @Result(column="minVolume", property="minVolume", jdbcType=JdbcType.DOUBLE),
        @Result(column="maxVolume", property="maxVolume", jdbcType=JdbcType.DOUBLE),
        @Result(column="height", property="height", jdbcType=JdbcType.DOUBLE),
        @Result(column="width", property="width", jdbcType=JdbcType.DOUBLE)
    })
    Car selectByPrimaryKey(CarKey key);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    @UpdateProvider(type=CarSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Car record, @Param("example") CarExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    @UpdateProvider(type=CarSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Car record, @Param("example") CarExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    @UpdateProvider(type=CarSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Car record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table car
     *
     * @mbg.generated Fri Jan 08 16:16:33 CST 2021
     */
    @Update({
        "update car",
        "set carType = #{carType,jdbcType=VARCHAR},",
          "volume = #{volume,jdbcType=DOUBLE},",
          "minVolume = #{minVolume,jdbcType=DOUBLE},",
          "maxVolume = #{maxVolume,jdbcType=DOUBLE},",
          "height = #{height,jdbcType=DOUBLE},",
          "width = #{width,jdbcType=DOUBLE}",
        "where carID = #{carID,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Car record);
}